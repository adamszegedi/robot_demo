<?xml version="1.0" encoding="UTF-8"?>
<keywordspec name="RequestsLibrary" type="LIBRARY" format="HTML" scope="GLOBAL" generated="2023-07-18T18:20:42+00:00" specversion="5" source="/home/aszegedi/projects/robot_demo/.venv/lib/python3.11/site-packages/RequestsLibrary/__init__.py" lineno="19">
<version>0.9.5</version>
<doc>&lt;p&gt;RequestsLibrary is a Robot Framework library aimed to provide HTTP api testing functionalities by wrapping the well known Python Requests Library.&lt;/p&gt;
&lt;h3 id="Table of contents"&gt;Table of contents&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="#Usage" class="name"&gt;Usage&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Response%20Object" class="name"&gt;Response Object&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#POST%20a%20Multipart-Encoded%20File" class="name"&gt;POST a Multipart-Encoded File&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="#Keywords" class="name"&gt;Keywords&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="Usage"&gt;Usage&lt;/h2&gt;
&lt;p&gt;The quickest way to start is using the requests keywords and urls see below examples:&lt;/p&gt;
&lt;pre&gt;
  &lt;b&gt;*&lt;/b&gt; Settings &lt;b&gt;*&lt;/b&gt;
  Library               RequestsLibrary

  &lt;b&gt;*&lt;/b&gt; Test Cases &lt;b&gt;*&lt;/b&gt;
  Quick Get Request Test
      ${response}=    GET  &lt;a href="https://www.google.com"&gt;https://www.google.com&lt;/a&gt;

  Quick Get Request With Parameters Test
      ${response}=    GET  &lt;a href="https://www.google.com/search"&gt;https://www.google.com/search&lt;/a&gt;  params=query=ciao  expected_status=200

  Quick Get A JSON Body Test
      ${response}=    GET  &lt;a href="https://jsonplaceholder.typicode.com/posts/1"&gt;https://jsonplaceholder.typicode.com/posts/1&lt;/a&gt;
      Should Be Equal As Strings    1  ${response.json()}[id]
&lt;/pre&gt;
&lt;p&gt;In order to share the HTTP Session (with the same url, headers, cookies, etc.) among multiple requests, a new connection needs to be prepared with &lt;code&gt;Create Session&lt;/code&gt; and passed to the &lt;span class="name"&gt;* On Session&lt;/span&gt; keywords. You can then execute any &lt;span class="name"&gt;* On Session&lt;/span&gt; keywords on the shared session by passing the created session alias name, this will increase performances since the connection and ssl handshake is recycled and not repeated for each requests. Below some more advanced examples:&lt;/p&gt;
&lt;pre&gt;
  &lt;b&gt;*&lt;/b&gt; Settings &lt;b&gt;*&lt;/b&gt;
  Library    Collections
  Library    RequestsLibrary

  Suite Setup    Create Session  jsonplaceholder  &lt;a href="https://jsonplaceholder.typicode.com"&gt;https://jsonplaceholder.typicode.com&lt;/a&gt;

  &lt;b&gt;*&lt;/b&gt; Test Cases &lt;b&gt;*&lt;/b&gt;

  Get Request Test
      Create Session    google  &lt;a href="http://www.google.com"&gt;http://www.google.com&lt;/a&gt;

      ${resp_google}=   GET On Session  google  /  expected_status=200
      ${resp_json}=     GET On Session  jsonplaceholder  /posts/1

      Should Be Equal As Strings          ${resp_google.reason}  OK
      Dictionary Should Contain Value     ${resp_json.json()}  sunt aut facere repellat provident

  Post Request Test
      &amp;amp;{data}=    Create dictionary  title=Robotframework requests  body=This is a test!  userId=1
      ${resp}=    POST On Session    jsonplaceholder  /posts  json=${data}  expected_status=anything

      Status Should Be                 201  ${resp}
      Dictionary Should Contain Key    ${resp.json()}  id
&lt;/pre&gt;
&lt;h2 id="Response Object"&gt;Response Object&lt;/h2&gt;
&lt;p&gt;All the HTTP requests keywords (GET, POST, PUT, etc.) return an extremely useful Response object. The Response object contains a server's response to an HTTP request.&lt;/p&gt;
&lt;p&gt;You can access the different attributes with the dot notation in this way: &lt;code&gt;${response.json()}&lt;/code&gt; or &lt;code&gt;${response.text}&lt;/code&gt;. Below the list of the most useful attributes:&lt;/p&gt;
&lt;table border="1"&gt;
&lt;tr&gt;
&lt;th&gt;Attributes&lt;/th&gt;
&lt;th&gt;Explanation&lt;/th&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;content&lt;/td&gt;
&lt;td&gt;Content of the response, in bytes.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;cookies&lt;/td&gt;
&lt;td&gt;A CookieJar of Cookies the server sent back.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;elapsed&lt;/td&gt;
&lt;td&gt;The amount of time elapsed between sending the request and the arrival of the response (as a timedelta). This property specifically measures the time taken between sending the first byte of the request and finishing parsing the headers. It is therefore unaffected by consuming the response content or the value of the stream keyword argument.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;encoding&lt;/td&gt;
&lt;td&gt;Encoding to decode with when accessing &lt;code&gt;response.text.&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;headers&lt;/td&gt;
&lt;td&gt;Case-insensitive Dictionary of Response Headers. For example, &lt;code&gt;headers['content-encoding']&lt;/code&gt; will return the value of a `Content-Encoding' response header.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;history&lt;/td&gt;
&lt;td&gt;A list of Response objects from the history of the Request. Any redirect responses will end up here. The list is sorted from the oldest to the most recent request.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;json&lt;/td&gt;
&lt;td&gt;Returns the json-encoded content of a response, if any. Parameters: &lt;code&gt;**kwargs&lt;/code&gt; - Optional arguments that json.loads takes. Raises:        ValueError ? If the response body does not contain valid json.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ok&lt;/td&gt;
&lt;td&gt;Returns True if status_code is less than 400, False if not.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;reason&lt;/td&gt;
&lt;td&gt;Textual reason of responded HTTP Status, e.g. &lt;code&gt;Not Found&lt;/code&gt; or &lt;code&gt;OK&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;status_code&lt;/td&gt;
&lt;td&gt;Integer Code of responded HTTP Status, e.g. 404 or 200.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;text&lt;/td&gt;
&lt;td&gt;Content of the response, in unicode. If &lt;code&gt;response.encoding&lt;/code&gt; is &lt;code&gt;None&lt;/code&gt;, encoding will be guessed using chardet. The encoding of the response content is determined based solely on HTTP headers, following RFC 2616 to the letter. If you can take advantage of non-HTTP knowledge to make a better guess at the encoding, you should set &lt;code&gt;response.encoding&lt;/code&gt; appropriately before accessing this property.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;url&lt;/td&gt;
&lt;td&gt;Final URL location of Response.&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;h2 id="POST a Multipart-Encoded File"&gt;POST a Multipart-Encoded File&lt;/h2&gt;
&lt;p&gt;RequestsLibrary makes it simple to upload Multipart-encoded files, but in order to make sure that the Python Library provides automatically the right &lt;code&gt;Content-Length&lt;/code&gt; and &lt;code&gt;multipart/form-data; boundary=...&lt;/code&gt; headers you SHOULD NOT provide those headers manually, use the keyword &lt;a href="#Get%20File%20For%20Streaming%20Upload" class="name"&gt;Get File For Streaming Upload&lt;/a&gt; instead that opens the files in binary mode.&lt;/p&gt;
&lt;p&gt;Below an example of multiple file sent over a single POST:&lt;/p&gt;
&lt;pre&gt;
  Test Post Multiple Files
      ${file_1}=  Get File For Streaming Upload  files/randombytes.bin
      ${file_2}=  Get File For Streaming Upload  files/randombytes.bin
      ${files}=   Create Dictionary  randombytes1  ${file_1}  randombytes2  ${file_2}

      ${resp}=    POST  &lt;a href="https://someurl"&gt;https://someurl&lt;/a&gt;  files=${files}
&lt;/pre&gt;
&lt;p&gt;You can find a working test example in &lt;span class="name"&gt;atests/test_post_multipart.robot&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;For a complete reference verify the official Requests documentation:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://2.python-requests.org/en/master/user/quickstart/#post-a-multipart-encoded-file"&gt;https://2.python-requests.org/en/master/user/quickstart/#post-a-multipart-encoded-file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://2.python-requests.org/en/master/user/advanced/#post-multiple-multipart-encoded-files"&gt;https://2.python-requests.org/en/master/user/advanced/#post-multiple-multipart-encoded-files&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</doc>
<tags>
</tags>
<inits>
</inits>
<keywords>
<kw name="Create Client Cert Session" source="/home/aszegedi/projects/robot_demo/.venv/lib/python3.11/site-packages/RequestsLibrary/SessionKeywords.py" lineno="191">
<arguments repr="alias, url, headers={}, cookies={}, client_certs=None, timeout=None, proxies=None, verify=False, debug=0, max_retries=3, backoff_factor=0.1, disable_warnings=0, retry_status_list=[], retry_method_list=['PUT', 'DELETE', 'OPTIONS', 'TRACE', 'GET', 'HEAD']">
<arg kind="POSITIONAL_OR_NAMED" required="true" repr="alias">
<name>alias</name>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="true" repr="url">
<name>url</name>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="headers={}">
<name>headers</name>
<default>{}</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="cookies={}">
<name>cookies</name>
<default>{}</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="client_certs=None">
<name>client_certs</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="timeout=None">
<name>timeout</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="proxies=None">
<name>proxies</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="verify=False">
<name>verify</name>
<default>False</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="debug=0">
<name>debug</name>
<default>0</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="max_retries=3">
<name>max_retries</name>
<default>3</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="backoff_factor=0.1">
<name>backoff_factor</name>
<default>0.1</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="disable_warnings=0">
<name>disable_warnings</name>
<default>0</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="retry_status_list=[]">
<name>retry_status_list</name>
<default>[]</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="retry_method_list=['PUT', 'DELETE', 'OPTIONS', 'TRACE', 'GET', 'HEAD']">
<name>retry_method_list</name>
<default>['PUT', 'DELETE', 'OPTIONS', 'TRACE', 'GET', 'HEAD']</default>
</arg>
</arguments>
<doc>&lt;p&gt;Create Session: create a HTTP session to a server&lt;/p&gt;
&lt;p&gt;&lt;code&gt;url&lt;/code&gt; Base url of the server&lt;/p&gt;
&lt;p&gt;&lt;code&gt;alias&lt;/code&gt; Robot Framework alias to identify the session&lt;/p&gt;
&lt;p&gt;&lt;code&gt;headers&lt;/code&gt; Dictionary of default headers&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cookies&lt;/code&gt; Dictionary of cookies&lt;/p&gt;
&lt;p&gt;&lt;code&gt;client_certs&lt;/code&gt; ['client certificate', 'client key'] PEM files containing the client key and certificate&lt;/p&gt;
&lt;p&gt;&lt;code&gt;timeout&lt;/code&gt; Connection timeout&lt;/p&gt;
&lt;p&gt;&lt;code&gt;proxies&lt;/code&gt; Dictionary mapping protocol or protocol and host to the URL of the proxy (e.g. {'http': 'foo.bar:3128', '&lt;a href="http://host.name"&gt;http://host.name&lt;/a&gt;': 'foo.bar:4012'})&lt;/p&gt;
&lt;p&gt;&lt;code&gt;verify&lt;/code&gt; Whether the SSL cert will be verified. A CA_BUNDLE path can also be provided. Defaults to False.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;debug&lt;/code&gt; Enable http verbosity option more information &lt;a href="https://docs.python.org/2/library/httplib.html#httplib.HTTPConnection.set_debuglevel"&gt;https://docs.python.org/2/library/httplib.html#httplib.HTTPConnection.set_debuglevel&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;max_retries&lt;/code&gt; Number of maximum retries each connection should attempt. By default it will retry 3 times in case of connection errors only. A 0 value will disable any kind of retries regardless of other retry settings. In case the number of retries is reached a retry exception is raised.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;disable_warnings&lt;/code&gt; Disable requests warning useful when you have large number of testcases&lt;/p&gt;
&lt;p&gt;&lt;code&gt;backoff_factor&lt;/code&gt; Introduces a delay time between retries that is longer after each retry. eg. if backoff_factor is set to 0.1 the sleep between attemps will be: 0.0, 0.2, 0.4 More info here: &lt;a href="https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html"&gt;https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;retry_method_list&lt;/code&gt; List of uppercased HTTP method verbs where retries are allowed. By default retries are allowed only on HTTP requests methods that are considered to be idempotent (multiple requests with the same parameters end with the same state). eg. set to ['POST', 'GET'] to retry only those kind of requests.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;retry_status_list&lt;/code&gt; List of integer HTTP status codes that, if returned, a retry is attempted. eg. set to [502, 503] to retry requests if those status are returned. Note that max_retries must be greater than 0.&lt;/p&gt;</doc>
<shortdoc>Create Session: create a HTTP session to a server</shortdoc>
</kw>
<kw name="Create Custom Session" source="/home/aszegedi/projects/robot_demo/.venv/lib/python3.11/site-packages/RequestsLibrary/SessionKeywords.py" lineno="277">
<arguments repr="alias, url, auth, headers={}, cookies={}, timeout=None, proxies=None, verify=False, debug=0, max_retries=3, backoff_factor=0.1, disable_warnings=0, retry_status_list=[], retry_method_list=['PUT', 'DELETE', 'OPTIONS', 'TRACE', 'GET', 'HEAD']">
<arg kind="POSITIONAL_OR_NAMED" required="true" repr="alias">
<name>alias</name>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="true" repr="url">
<name>url</name>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="true" repr="auth">
<name>auth</name>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="headers={}">
<name>headers</name>
<default>{}</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="cookies={}">
<name>cookies</name>
<default>{}</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="timeout=None">
<name>timeout</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="proxies=None">
<name>proxies</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="verify=False">
<name>verify</name>
<default>False</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="debug=0">
<name>debug</name>
<default>0</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="max_retries=3">
<name>max_retries</name>
<default>3</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="backoff_factor=0.1">
<name>backoff_factor</name>
<default>0.1</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="disable_warnings=0">
<name>disable_warnings</name>
<default>0</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="retry_status_list=[]">
<name>retry_status_list</name>
<default>[]</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="retry_method_list=['PUT', 'DELETE', 'OPTIONS', 'TRACE', 'GET', 'HEAD']">
<name>retry_method_list</name>
<default>['PUT', 'DELETE', 'OPTIONS', 'TRACE', 'GET', 'HEAD']</default>
</arg>
</arguments>
<doc>&lt;p&gt;Create Session: create a HTTP session to a server&lt;/p&gt;
&lt;p&gt;&lt;code&gt;url&lt;/code&gt; Base url of the server&lt;/p&gt;
&lt;p&gt;&lt;code&gt;alias&lt;/code&gt; Robot Framework alias to identify the session&lt;/p&gt;
&lt;p&gt;&lt;code&gt;headers&lt;/code&gt; Dictionary of default headers&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cookies&lt;/code&gt; Dictionary of cookies&lt;/p&gt;
&lt;p&gt;&lt;code&gt;auth&lt;/code&gt; A Custom Authentication object to be passed on to the requests library. &lt;a href="http://docs.python-requests.org/en/master/user/advanced/#custom-authentication"&gt;http://docs.python-requests.org/en/master/user/advanced/#custom-authentication&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;timeout&lt;/code&gt; Connection timeout&lt;/p&gt;
&lt;p&gt;&lt;code&gt;proxies&lt;/code&gt; Dictionary mapping protocol or protocol and host to the URL of the proxy (e.g. {'http': 'foo.bar:3128', '&lt;a href="http://host.name"&gt;http://host.name&lt;/a&gt;': 'foo.bar:4012'})&lt;/p&gt;
&lt;p&gt;&lt;code&gt;verify&lt;/code&gt; Whether the SSL cert will be verified. A CA_BUNDLE path can also be provided. Defaults to False.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;debug&lt;/code&gt; Enable http verbosity option more information &lt;a href="https://docs.python.org/2/library/httplib.html#httplib.HTTPConnection.set_debuglevel"&gt;https://docs.python.org/2/library/httplib.html#httplib.HTTPConnection.set_debuglevel&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;max_retries&lt;/code&gt; Number of maximum retries each connection should attempt. By default it will retry 3 times in case of connection errors only. A 0 value will disable any kind of retries regardless of other retry settings. In case the number of retries is reached a retry exception is raised.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;disable_warnings&lt;/code&gt; Disable requests warning useful when you have large number of testcases&lt;/p&gt;
&lt;p&gt;&lt;code&gt;backoff_factor&lt;/code&gt; Introduces a delay time between retries that is longer after each retry. eg. if backoff_factor is set to 0.1 the sleep between attemps will be: 0.0, 0.2, 0.4 More info here: &lt;a href="https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html"&gt;https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;retry_method_list&lt;/code&gt; List of uppercased HTTP method verbs where retries are allowed. By default retries are allowed only on HTTP requests methods that are considered to be idempotent (multiple requests with the same parameters end with the same state). eg. set to ['POST', 'GET'] to retry only those kind of requests.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;retry_status_list&lt;/code&gt; List of integer HTTP status codes that, if returned, a retry is attempted. eg. set to [502, 503] to retry requests if those status are returned. Note that max_retries must be greater than 0.&lt;/p&gt;</doc>
<shortdoc>Create Session: create a HTTP session to a server</shortdoc>
</kw>
<kw name="Create Digest Session" source="/home/aszegedi/projects/robot_demo/.venv/lib/python3.11/site-packages/RequestsLibrary/SessionKeywords.py" lineno="361">
<arguments repr="alias, url, auth, headers={}, cookies={}, timeout=None, proxies=None, verify=False, debug=0, max_retries=3, backoff_factor=0.1, disable_warnings=0, retry_status_list=[], retry_method_list=['PUT', 'DELETE', 'OPTIONS', 'TRACE', 'GET', 'HEAD']">
<arg kind="POSITIONAL_OR_NAMED" required="true" repr="alias">
<name>alias</name>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="true" repr="url">
<name>url</name>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="true" repr="auth">
<name>auth</name>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="headers={}">
<name>headers</name>
<default>{}</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="cookies={}">
<name>cookies</name>
<default>{}</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="timeout=None">
<name>timeout</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="proxies=None">
<name>proxies</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="verify=False">
<name>verify</name>
<default>False</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="debug=0">
<name>debug</name>
<default>0</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="max_retries=3">
<name>max_retries</name>
<default>3</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="backoff_factor=0.1">
<name>backoff_factor</name>
<default>0.1</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="disable_warnings=0">
<name>disable_warnings</name>
<default>0</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="retry_status_list=[]">
<name>retry_status_list</name>
<default>[]</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="retry_method_list=['PUT', 'DELETE', 'OPTIONS', 'TRACE', 'GET', 'HEAD']">
<name>retry_method_list</name>
<default>['PUT', 'DELETE', 'OPTIONS', 'TRACE', 'GET', 'HEAD']</default>
</arg>
</arguments>
<doc>&lt;p&gt;Create Session: create a HTTP session to a server&lt;/p&gt;
&lt;p&gt;&lt;code&gt;url&lt;/code&gt; Base url of the server&lt;/p&gt;
&lt;p&gt;&lt;code&gt;alias&lt;/code&gt; Robot Framework alias to identify the session&lt;/p&gt;
&lt;p&gt;&lt;code&gt;headers&lt;/code&gt; Dictionary of default headers&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cookies&lt;/code&gt; Dictionary of cookies&lt;/p&gt;
&lt;p&gt;&lt;code&gt;auth&lt;/code&gt; ['DOMAIN', 'username', 'password'] for NTLM Authentication&lt;/p&gt;
&lt;p&gt;&lt;code&gt;timeout&lt;/code&gt; Connection timeout&lt;/p&gt;
&lt;p&gt;&lt;code&gt;proxies&lt;/code&gt; Dictionary mapping protocol or protocol and host to the URL of the proxy (e.g. {'http': 'foo.bar:3128', '&lt;a href="http://host.name"&gt;http://host.name&lt;/a&gt;': 'foo.bar:4012'})&lt;/p&gt;
&lt;p&gt;&lt;code&gt;verify&lt;/code&gt; Whether the SSL cert will be verified. A CA_BUNDLE path can also be provided. Defaults to False.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;debug&lt;/code&gt; Enable http verbosity option more information &lt;a href="https://docs.python.org/2/library/httplib.html#httplib.HTTPConnection.set_debuglevel"&gt;https://docs.python.org/2/library/httplib.html#httplib.HTTPConnection.set_debuglevel&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;max_retries&lt;/code&gt; Number of maximum retries each connection should attempt. By default it will retry 3 times in case of connection errors only. A 0 value will disable any kind of retries regardless of other retry settings. In case the number of retries is reached a retry exception is raised.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;disable_warnings&lt;/code&gt; Disable requests warning useful when you have large number of testcases&lt;/p&gt;
&lt;p&gt;&lt;code&gt;backoff_factor&lt;/code&gt; Introduces a delay time between retries that is longer after each retry. eg. if backoff_factor is set to 0.1 the sleep between attemps will be: 0.0, 0.2, 0.4 More info here: &lt;a href="https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html"&gt;https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;retry_method_list&lt;/code&gt; List of uppercased HTTP method verbs where retries are allowed. By default retries are allowed only on HTTP requests methods that are considered to be idempotent (multiple requests with the same parameters end with the same state). eg. set to ['POST', 'GET'] to retry only those kind of requests.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;retry_status_list&lt;/code&gt; List of integer HTTP status codes that, if returned, a retry is attempted. eg. set to [502, 503] to retry requests if those status are returned. Note that max_retries must be greater than 0.&lt;/p&gt;</doc>
<shortdoc>Create Session: create a HTTP session to a server</shortdoc>
</kw>
<kw name="Create Ntlm Session" source="/home/aszegedi/projects/robot_demo/.venv/lib/python3.11/site-packages/RequestsLibrary/SessionKeywords.py" lineno="439">
<arguments repr="alias, url, auth, headers={}, cookies={}, timeout=None, proxies=None, verify=False, debug=0, max_retries=3, backoff_factor=0.1, disable_warnings=0, retry_status_list=[], retry_method_list=['PUT', 'DELETE', 'OPTIONS', 'TRACE', 'GET', 'HEAD']">
<arg kind="POSITIONAL_OR_NAMED" required="true" repr="alias">
<name>alias</name>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="true" repr="url">
<name>url</name>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="true" repr="auth">
<name>auth</name>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="headers={}">
<name>headers</name>
<default>{}</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="cookies={}">
<name>cookies</name>
<default>{}</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="timeout=None">
<name>timeout</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="proxies=None">
<name>proxies</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="verify=False">
<name>verify</name>
<default>False</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="debug=0">
<name>debug</name>
<default>0</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="max_retries=3">
<name>max_retries</name>
<default>3</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="backoff_factor=0.1">
<name>backoff_factor</name>
<default>0.1</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="disable_warnings=0">
<name>disable_warnings</name>
<default>0</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="retry_status_list=[]">
<name>retry_status_list</name>
<default>[]</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="retry_method_list=['PUT', 'DELETE', 'OPTIONS', 'TRACE', 'GET', 'HEAD']">
<name>retry_method_list</name>
<default>['PUT', 'DELETE', 'OPTIONS', 'TRACE', 'GET', 'HEAD']</default>
</arg>
</arguments>
<doc>&lt;p&gt;Create Session: create a HTTP session to a server&lt;/p&gt;
&lt;p&gt;&lt;code&gt;url&lt;/code&gt; Base url of the server&lt;/p&gt;
&lt;p&gt;&lt;code&gt;alias&lt;/code&gt; Robot Framework alias to identify the session&lt;/p&gt;
&lt;p&gt;&lt;code&gt;headers&lt;/code&gt; Dictionary of default headers&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cookies&lt;/code&gt; Dictionary of cookies&lt;/p&gt;
&lt;p&gt;&lt;code&gt;auth&lt;/code&gt; ['DOMAIN', 'username', 'password'] for NTLM Authentication&lt;/p&gt;
&lt;p&gt;&lt;code&gt;timeout&lt;/code&gt; Connection timeout&lt;/p&gt;
&lt;p&gt;&lt;code&gt;proxies&lt;/code&gt; Dictionary mapping protocol or protocol and host to the URL of the proxy (e.g. {'http': 'foo.bar:3128', '&lt;a href="http://host.name"&gt;http://host.name&lt;/a&gt;': 'foo.bar:4012'})&lt;/p&gt;
&lt;p&gt;&lt;code&gt;verify&lt;/code&gt; Whether the SSL cert will be verified. A CA_BUNDLE path can also be provided. Defaults to False.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;debug&lt;/code&gt; Enable http verbosity option more information &lt;a href="https://docs.python.org/2/library/httplib.html#httplib.HTTPConnection.set_debuglevel"&gt;https://docs.python.org/2/library/httplib.html#httplib.HTTPConnection.set_debuglevel&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;max_retries&lt;/code&gt; Number of maximum retries each connection should attempt. By default it will retry 3 times in case of connection errors only. A 0 value will disable any kind of retries regardless of other retry settings. In case the number of retries is reached a retry exception is raised.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;disable_warnings&lt;/code&gt; Disable requests warning useful when you have large number of testcases&lt;/p&gt;
&lt;p&gt;&lt;code&gt;backoff_factor&lt;/code&gt; Introduces a delay time between retries that is longer after each retry. eg. if backoff_factor is set to 0.1 the sleep between attemps will be: 0.0, 0.2, 0.4 More info here: &lt;a href="https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html"&gt;https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;retry_method_list&lt;/code&gt; List of uppercased HTTP method verbs where retries are allowed. By default retries are allowed only on HTTP requests methods that are considered to be idempotent (multiple requests with the same parameters end with the same state). eg. set to ['POST', 'GET'] to retry only those kind of requests.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;retry_status_list&lt;/code&gt; List of integer HTTP status codes that, if returned, a retry is attempted. eg. set to [502, 503] to retry requests if those status are returned. Note that max_retries must be greater than 0.&lt;/p&gt;</doc>
<shortdoc>Create Session: create a HTTP session to a server</shortdoc>
</kw>
<kw name="Create Session" source="/home/aszegedi/projects/robot_demo/.venv/lib/python3.11/site-packages/RequestsLibrary/SessionKeywords.py" lineno="109">
<arguments repr="alias, url, headers={}, cookies={}, auth=None, timeout=None, proxies=None, verify=False, debug=0, max_retries=3, backoff_factor=0.1, disable_warnings=0, retry_status_list=[], retry_method_list=['PUT', 'DELETE', 'OPTIONS', 'TRACE', 'GET', 'HEAD']">
<arg kind="POSITIONAL_OR_NAMED" required="true" repr="alias">
<name>alias</name>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="true" repr="url">
<name>url</name>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="headers={}">
<name>headers</name>
<default>{}</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="cookies={}">
<name>cookies</name>
<default>{}</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="auth=None">
<name>auth</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="timeout=None">
<name>timeout</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="proxies=None">
<name>proxies</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="verify=False">
<name>verify</name>
<default>False</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="debug=0">
<name>debug</name>
<default>0</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="max_retries=3">
<name>max_retries</name>
<default>3</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="backoff_factor=0.1">
<name>backoff_factor</name>
<default>0.1</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="disable_warnings=0">
<name>disable_warnings</name>
<default>0</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="retry_status_list=[]">
<name>retry_status_list</name>
<default>[]</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="retry_method_list=['PUT', 'DELETE', 'OPTIONS', 'TRACE', 'GET', 'HEAD']">
<name>retry_method_list</name>
<default>['PUT', 'DELETE', 'OPTIONS', 'TRACE', 'GET', 'HEAD']</default>
</arg>
</arguments>
<doc>&lt;p&gt;Create Session: create a HTTP session to a server&lt;/p&gt;
&lt;p&gt;&lt;code&gt;alias&lt;/code&gt; Robot Framework alias to identify the session&lt;/p&gt;
&lt;p&gt;&lt;code&gt;url&lt;/code&gt; Base url of the server&lt;/p&gt;
&lt;p&gt;&lt;code&gt;headers&lt;/code&gt; Dictionary of default headers&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cookies&lt;/code&gt; Dictionary of cookies&lt;/p&gt;
&lt;p&gt;&lt;code&gt;auth&lt;/code&gt; List of username &amp;amp; password for HTTP Basic Auth&lt;/p&gt;
&lt;p&gt;&lt;code&gt;timeout&lt;/code&gt; Connection timeout&lt;/p&gt;
&lt;p&gt;&lt;code&gt;proxies&lt;/code&gt; Dictionary mapping protocol or protocol and host to the URL of the proxy (e.g. {'http': 'foo.bar:3128', '&lt;a href="http://host.name"&gt;http://host.name&lt;/a&gt;': 'foo.bar:4012'})&lt;/p&gt;
&lt;p&gt;&lt;code&gt;verify&lt;/code&gt; Whether the SSL cert will be verified. A CA_BUNDLE path can also be provided.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;debug&lt;/code&gt; Enable http verbosity option more information &lt;a href="https://docs.python.org/2/library/httplib.html#httplib.HTTPConnection.set_debuglevel"&gt;https://docs.python.org/2/library/httplib.html#httplib.HTTPConnection.set_debuglevel&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;max_retries&lt;/code&gt; Number of maximum retries each connection should attempt. By default it will retry 3 times in case of connection errors only. A 0 value will disable any kind of retries regardless of other retry settings. In case the number of retries is reached a retry exception is raised.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;disable_warnings&lt;/code&gt; Disable requests warning useful when you have large number of testcases&lt;/p&gt;
&lt;p&gt;&lt;code&gt;backoff_factor&lt;/code&gt; Introduces a delay time between retries that is longer after each retry. eg. if backoff_factor is set to 0.1 the sleep between attemps will be: 0.0, 0.2, 0.4 More info here: &lt;a href="https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html"&gt;https://urllib3.readthedocs.io/en/latest/reference/urllib3.util.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;retry_method_list&lt;/code&gt; List of uppercased HTTP method verbs where retries are allowed. By default retries are allowed only on HTTP requests methods that are considered to be idempotent (multiple requests with the same parameters end with the same state). eg. set to ['POST', 'GET'] to retry only those kind of requests.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;retry_status_list&lt;/code&gt; List of integer HTTP status codes that, if returned, a retry is attempted. eg. set to [502, 503] to retry requests if those status are returned. Note that max_retries must be greater than 0.&lt;/p&gt;</doc>
<shortdoc>Create Session: create a HTTP session to a server</shortdoc>
</kw>
<kw name="DELETE" source="/home/aszegedi/projects/robot_demo/.venv/lib/python3.11/site-packages/RequestsLibrary/utils.py" lineno="136">
<arguments repr="*args, **kwargs">
<arg kind="VAR_POSITIONAL" required="false" repr="*args">
<name>args</name>
</arg>
<arg kind="VAR_NAMED" required="false" repr="**kwargs">
<name>kwargs</name>
</arg>
</arguments>
<doc>&lt;p&gt;Sends a DELETE request.&lt;/p&gt;
&lt;p&gt;The endpoint used to send the request is the &lt;code&gt;url&lt;/code&gt; parameter.&lt;/p&gt;
&lt;p&gt;By default this keyword fails if a status code with error values is returned in the response, this behavior can be modified using the &lt;code&gt;expected_status&lt;/code&gt; and &lt;code&gt;msg&lt;/code&gt; parameters, read more about it in &lt;a href="#Status%20Should%20Be" class="name"&gt;Status Should Be&lt;/a&gt; keyword documentation. In order to disable this implicit assert mechanism you can pass as &lt;code&gt;expected_status&lt;/code&gt; the values &lt;code&gt;any&lt;/code&gt; or &lt;code&gt;anything&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Other optional requests arguments can be passed using &lt;code&gt;**kwargs&lt;/code&gt; see the &lt;a href="#GET" class="name"&gt;GET&lt;/a&gt; keyword for the complete list.&lt;/p&gt;</doc>
<shortdoc>Sends a DELETE request.</shortdoc>
</kw>
<kw name="Delete All Sessions" source="/home/aszegedi/projects/robot_demo/.venv/lib/python3.11/site-packages/RequestsLibrary/SessionKeywords.py" lineno="544">
<arguments repr="">
</arguments>
<doc>&lt;p&gt;Removes all the session objects&lt;/p&gt;</doc>
<shortdoc>Removes all the session objects</shortdoc>
</kw>
<kw name="DELETE On Session" source="/home/aszegedi/projects/robot_demo/.venv/lib/python3.11/site-packages/RequestsLibrary/utils.py" lineno="149">
<arguments repr="*args, **kwargs">
<arg kind="VAR_POSITIONAL" required="false" repr="*args">
<name>args</name>
</arg>
<arg kind="VAR_NAMED" required="false" repr="**kwargs">
<name>kwargs</name>
</arg>
</arguments>
<doc>&lt;p&gt;Sends a DELETE request on a previously created HTTP Session.&lt;/p&gt;
&lt;p&gt;Session will be identified using the &lt;code&gt;alias&lt;/code&gt; name. The endpoint used to send the request is the &lt;code&gt;url&lt;/code&gt; parameter.&lt;/p&gt;
&lt;p&gt;By default this keyword fails if a status code with error values is returned in the response, this behavior can be modified using the &lt;code&gt;expected_status&lt;/code&gt; and &lt;code&gt;msg&lt;/code&gt; parameters, read more about it in &lt;a href="#Status%20Should%20Be" class="name"&gt;Status Should Be&lt;/a&gt; keyword documentation. In order to disable this implicit assert mechanism you can pass as &lt;code&gt;expected_status&lt;/code&gt; the values &lt;code&gt;any&lt;/code&gt; or &lt;code&gt;anything&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Other optional requests arguments can be passed using &lt;code&gt;**kwargs&lt;/code&gt; see the &lt;a href="#GET" class="name"&gt;GET&lt;/a&gt; keyword for the complete list.&lt;/p&gt;</doc>
<shortdoc>Sends a DELETE request on a previously created HTTP Session.</shortdoc>
</kw>
<kw name="Delete Request" deprecated="true" source="/home/aszegedi/projects/robot_demo/.venv/lib/python3.11/site-packages/RequestsLibrary/DeprecatedKeywords.py" lineno="261">
<arguments repr="alias, uri, data=None, json=None, params=None, headers=None, allow_redirects=None, timeout=None">
<arg kind="POSITIONAL_OR_NAMED" required="true" repr="alias">
<name>alias</name>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="true" repr="uri">
<name>uri</name>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="data=None">
<name>data</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="json=None">
<name>json</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="params=None">
<name>params</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="headers=None">
<name>headers</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="allow_redirects=None">
<name>allow_redirects</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="timeout=None">
<name>timeout</name>
<default>None</default>
</arg>
</arguments>
<doc>&lt;p&gt;&lt;b&gt;DEPRECATED&lt;/b&gt; Please use &lt;a href="#DELETE%20On%20Session" class="name"&gt;DELETE On Session&lt;/a&gt; instead.&lt;/p&gt;
&lt;p&gt;Send a DELETE request on the session object found using the given &lt;span class="name"&gt;alias&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;alias&lt;/code&gt; that will be used to identify the Session object in the cache&lt;/p&gt;
&lt;p&gt;&lt;code&gt;uri&lt;/code&gt; to send the DELETE request to&lt;/p&gt;
&lt;p&gt;&lt;code&gt;json&lt;/code&gt; a value that will be json encoded and sent as request data if data is not specified&lt;/p&gt;
&lt;p&gt;&lt;code&gt;headers&lt;/code&gt; a dictionary of headers to use with the request&lt;/p&gt;
&lt;p&gt;&lt;code&gt;allow_redirects&lt;/code&gt; Boolean. Set to True if POST/PUT/DELETE redirect following is allowed.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;timeout&lt;/code&gt; connection timeout&lt;/p&gt;</doc>
<shortdoc>*DEPRECATED* Please use `DELETE On Session` instead.</shortdoc>
</kw>
<kw name="GET" source="/home/aszegedi/projects/robot_demo/.venv/lib/python3.11/site-packages/RequestsLibrary/utils.py" lineno="136">
<arguments repr="*args, **kwargs">
<arg kind="VAR_POSITIONAL" required="false" repr="*args">
<name>args</name>
</arg>
<arg kind="VAR_NAMED" required="false" repr="**kwargs">
<name>kwargs</name>
</arg>
</arguments>
<doc>&lt;p&gt;Sends a GET request.&lt;/p&gt;
&lt;p&gt;The endpoint used to retrieve the resource is the &lt;code&gt;url&lt;/code&gt;, while query string parameters can be passed as string, dictionary (or list of tuples or bytes) through the &lt;code&gt;params&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;By default this keyword fails if a status code with error values is returned in the response, this behavior can be modified using the &lt;code&gt;expected_status&lt;/code&gt; and &lt;code&gt;msg&lt;/code&gt; parameters, read more about it in &lt;a href="#Status%20Should%20Be" class="name"&gt;Status Should Be&lt;/a&gt; keyword documentation. In order to disable this implicit assert mechanism you can pass as &lt;code&gt;expected_status&lt;/code&gt; the values &lt;code&gt;any&lt;/code&gt; or &lt;code&gt;anything&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Other optional requests arguments can be passed using &lt;code&gt;**kwargs&lt;/code&gt; here is a list:&lt;/p&gt;
&lt;table border="1"&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;data&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Dictionary, list of tuples, bytes, or file-like object to send in the body of the request.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;json&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;A JSON serializable Python object to send in the body of the request.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;headers&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Dictionary of HTTP Headers to send with the request.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cookies&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Dict or CookieJar object to send with the request.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;files&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Dictionary of file-like-objects (or &lt;code&gt;{'name': file-tuple}&lt;/code&gt;) for multipart encoding upload.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;file-tuple&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;can be a 2-tuple &lt;code&gt;('filename', fileobj)&lt;/code&gt;, 3-tuple &lt;code&gt;('filename', fileobj, 'content_type')&lt;/code&gt; or a 4-tuple &lt;code&gt;('filename', fileobj, 'content_type', custom_headers)&lt;/code&gt;, where &lt;code&gt;'content-type'&lt;/code&gt; is a string defining the content type of the given file and &lt;code&gt;custom_headers&lt;/code&gt; a dict-like object containing additional headers to add for the file.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;auth&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Auth tuple to enable Basic/Digest/Custom HTTP Auth.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;timeout&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;How many seconds to wait for the server to send data before giving up, as a float, or a &lt;code&gt;(connect timeout, read timeout)&lt;/code&gt; tuple.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;allow_redirects&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Boolean. Enable/disable GET/OPTIONS/POST/PUT/PATCH/DELETE/HEAD redirection. Defaults to &lt;code&gt;${True}&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;proxies&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Dictionary mapping protocol or protocol and host to the URL of the proxy (e.g. {'http': 'foo.bar:3128', '&lt;a href="http://host.name"&gt;http://host.name&lt;/a&gt;': 'foo.bar:4012'})&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;verify&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Either a boolean, in which case it controls whether we verify the server's TLS certificate, or a string, in which case it must be a path to a CA bundle to use. Defaults to &lt;code&gt;${True}&lt;/code&gt;. Warning: if a session has been created with &lt;code&gt;verify=${False}&lt;/code&gt; any other requests will not verify the SSL certificate.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;stream&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;if &lt;code&gt;${False}&lt;/code&gt;, the response content will be immediately downloaded.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;cert&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;if String, path to ssl client cert file (.pem). If Tuple, ('cert', 'key') pair.&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
&lt;p&gt;For more updated and complete information verify the official Requests api documentation: &lt;a href="https://requests.readthedocs.io/en/latest/api/"&gt;https://requests.readthedocs.io/en/latest/api/&lt;/a&gt;&lt;/p&gt;</doc>
<shortdoc>Sends a GET request.</shortdoc>
</kw>
<kw name="Get File For Streaming Upload" source="/home/aszegedi/projects/robot_demo/.venv/lib/python3.11/site-packages/RequestsLibrary/RequestsKeywords.py" lineno="141">
<arguments repr="path">
<arg kind="POSITIONAL_OR_NAMED" required="true" repr="path">
<name>path</name>
</arg>
</arguments>
<doc>&lt;p&gt;Opens and returns a file descriptor of a specified file to be passed as &lt;code&gt;data&lt;/code&gt; parameter to other requests keywords.&lt;/p&gt;
&lt;p&gt;This allows streaming upload of large files without reading them into memory.&lt;/p&gt;
&lt;p&gt;File descriptor is binary mode and read only. Requests keywords will automatically close the file, if used outside this library it's up to the caller to close it.&lt;/p&gt;</doc>
<shortdoc>Opens and returns a file descriptor of a specified file to be passed as ``data`` parameter to other requests keywords.</shortdoc>
</kw>
<kw name="GET On Session" source="/home/aszegedi/projects/robot_demo/.venv/lib/python3.11/site-packages/RequestsLibrary/utils.py" lineno="149">
<arguments repr="*args, **kwargs">
<arg kind="VAR_POSITIONAL" required="false" repr="*args">
<name>args</name>
</arg>
<arg kind="VAR_NAMED" required="false" repr="**kwargs">
<name>kwargs</name>
</arg>
</arguments>
<doc>&lt;p&gt;Sends a GET request on a previously created HTTP Session.&lt;/p&gt;
&lt;p&gt;Session will be identified using the &lt;code&gt;alias&lt;/code&gt; name. The endpoint used to retrieve the resource is the &lt;code&gt;url&lt;/code&gt;, while query string parameters can be passed as string, dictionary (or list of tuples or bytes) through the &lt;code&gt;params&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;By default this keyword fails if a status code with error values is returned in the response, this behavior can be modified using the &lt;code&gt;expected_status&lt;/code&gt; and &lt;code&gt;msg&lt;/code&gt; parameters, read more about it in &lt;a href="#Status%20Should%20Be" class="name"&gt;Status Should Be&lt;/a&gt; keyword documentation. In order to disable this implicit assert mechanism you can pass as &lt;code&gt;expected_status&lt;/code&gt; the values &lt;code&gt;any&lt;/code&gt; or &lt;code&gt;anything&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Other optional requests arguments can be passed using &lt;code&gt;**kwargs&lt;/code&gt; see the &lt;a href="#GET" class="name"&gt;GET&lt;/a&gt; keyword for the complete list.&lt;/p&gt;</doc>
<shortdoc>Sends a GET request on a previously created HTTP Session.</shortdoc>
</kw>
<kw name="Get Request" deprecated="true" source="/home/aszegedi/projects/robot_demo/.venv/lib/python3.11/site-packages/RequestsLibrary/DeprecatedKeywords.py" lineno="36">
<arguments repr="alias, uri, headers=None, data=None, json=None, params=None, allow_redirects=None, timeout=None">
<arg kind="POSITIONAL_OR_NAMED" required="true" repr="alias">
<name>alias</name>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="true" repr="uri">
<name>uri</name>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="headers=None">
<name>headers</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="data=None">
<name>data</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="json=None">
<name>json</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="params=None">
<name>params</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="allow_redirects=None">
<name>allow_redirects</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="timeout=None">
<name>timeout</name>
<default>None</default>
</arg>
</arguments>
<doc>&lt;p&gt;&lt;b&gt;DEPRECATED&lt;/b&gt; Please use &lt;a href="#GET%20On%20Session" class="name"&gt;GET On Session&lt;/a&gt; instead.&lt;/p&gt;
&lt;p&gt;Send a GET request on the session object found using the given &lt;span class="name"&gt;alias&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;alias&lt;/code&gt; that will be used to identify the Session object in the cache&lt;/p&gt;
&lt;p&gt;&lt;code&gt;uri&lt;/code&gt; to send the GET request to&lt;/p&gt;
&lt;p&gt;&lt;code&gt;params&lt;/code&gt; url parameters to append to the uri&lt;/p&gt;
&lt;p&gt;&lt;code&gt;headers&lt;/code&gt; a dictionary of headers to use with the request&lt;/p&gt;
&lt;p&gt;&lt;code&gt;data&lt;/code&gt; a dictionary of key-value pairs that will be urlencoded and sent as GET data or binary data that is sent as the raw body content&lt;/p&gt;
&lt;p&gt;&lt;code&gt;json&lt;/code&gt; a value that will be json encoded and sent as GET data if data is not specified&lt;/p&gt;
&lt;p&gt;&lt;code&gt;allow_redirects&lt;/code&gt; Boolean. Set to True if POST/PUT/DELETE redirect following is allowed.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;timeout&lt;/code&gt; connection timeout&lt;/p&gt;</doc>
<shortdoc>*DEPRECATED* Please use `GET On Session` instead.</shortdoc>
</kw>
<kw name="HEAD" source="/home/aszegedi/projects/robot_demo/.venv/lib/python3.11/site-packages/RequestsLibrary/utils.py" lineno="136">
<arguments repr="*args, **kwargs">
<arg kind="VAR_POSITIONAL" required="false" repr="*args">
<name>args</name>
</arg>
<arg kind="VAR_NAMED" required="false" repr="**kwargs">
<name>kwargs</name>
</arg>
</arguments>
<doc>&lt;p&gt;Sends a HEAD request.&lt;/p&gt;
&lt;p&gt;The endpoint used to retrieve the HTTP headers is the &lt;code&gt;url&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;allow_redirects&lt;/code&gt; parameter is not provided, it will be set to &lt;span class="name"&gt;False&lt;/span&gt; (as opposed to the default behavior).&lt;/p&gt;
&lt;p&gt;By default this keyword fails if a status code with error values is returned in the response, this behavior can be modified using the &lt;code&gt;expected_status&lt;/code&gt; and &lt;code&gt;msg&lt;/code&gt; parameters, read more about it in &lt;a href="#Status%20Should%20Be" class="name"&gt;Status Should Be&lt;/a&gt; keyword documentation. In order to disable this implicit assert mechanism you can pass as &lt;code&gt;expected_status&lt;/code&gt; the values &lt;code&gt;any&lt;/code&gt; or &lt;code&gt;anything&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Other optional requests arguments can be passed using &lt;code&gt;**kwargs&lt;/code&gt; see the &lt;a href="#GET" class="name"&gt;GET&lt;/a&gt; keyword for the complete list.&lt;/p&gt;</doc>
<shortdoc>Sends a HEAD request.</shortdoc>
</kw>
<kw name="HEAD On Session" source="/home/aszegedi/projects/robot_demo/.venv/lib/python3.11/site-packages/RequestsLibrary/utils.py" lineno="149">
<arguments repr="*args, **kwargs">
<arg kind="VAR_POSITIONAL" required="false" repr="*args">
<name>args</name>
</arg>
<arg kind="VAR_NAMED" required="false" repr="**kwargs">
<name>kwargs</name>
</arg>
</arguments>
<doc>&lt;p&gt;Sends a HEAD request on a previously created HTTP Session.&lt;/p&gt;
&lt;p&gt;Session will be identified using the &lt;code&gt;alias&lt;/code&gt; name. The endpoint used to retrieve the HTTP headers is the &lt;code&gt;url&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;allow_redirects&lt;/code&gt; parameter is not provided, it will be set to &lt;span class="name"&gt;False&lt;/span&gt; (as opposed to the default behavior).&lt;/p&gt;
&lt;p&gt;By default this keyword fails if a status code with error values is returned in the response, this behavior can be modified using the &lt;code&gt;expected_status&lt;/code&gt; and &lt;code&gt;msg&lt;/code&gt; parameters, read more about it in &lt;a href="#Status%20Should%20Be" class="name"&gt;Status Should Be&lt;/a&gt; keyword documentation. In order to disable this implicit assert mechanism you can pass as &lt;code&gt;expected_status&lt;/code&gt; the values &lt;code&gt;any&lt;/code&gt; or &lt;code&gt;anything&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Other optional requests arguments can be passed using &lt;code&gt;**kwargs&lt;/code&gt; see the &lt;a href="#GET" class="name"&gt;GET&lt;/a&gt; keyword for the complete list.&lt;/p&gt;</doc>
<shortdoc>Sends a HEAD request on a previously created HTTP Session.</shortdoc>
</kw>
<kw name="Head Request" deprecated="true" source="/home/aszegedi/projects/robot_demo/.venv/lib/python3.11/site-packages/RequestsLibrary/DeprecatedKeywords.py" lineno="308">
<arguments repr="alias, uri, headers=None, allow_redirects=None, timeout=None">
<arg kind="POSITIONAL_OR_NAMED" required="true" repr="alias">
<name>alias</name>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="true" repr="uri">
<name>uri</name>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="headers=None">
<name>headers</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="allow_redirects=None">
<name>allow_redirects</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="timeout=None">
<name>timeout</name>
<default>None</default>
</arg>
</arguments>
<doc>&lt;p&gt;&lt;b&gt;DEPRECATED&lt;/b&gt; Please use &lt;a href="#HEAD%20On%20Session" class="name"&gt;HEAD On Session&lt;/a&gt; instead.&lt;/p&gt;
&lt;p&gt;Send a HEAD request on the session object found using the given &lt;span class="name"&gt;alias&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;alias&lt;/code&gt; that will be used to identify the Session object in the cache&lt;/p&gt;
&lt;p&gt;&lt;code&gt;uri&lt;/code&gt; to send the HEAD request to&lt;/p&gt;
&lt;p&gt;&lt;code&gt;allow_redirects&lt;/code&gt; Boolean. Set to True if POST/PUT/DELETE redirect following is allowed.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;headers&lt;/code&gt; a dictionary of headers to use with the request&lt;/p&gt;
&lt;p&gt;&lt;code&gt;timeout&lt;/code&gt; connection timeout&lt;/p&gt;</doc>
<shortdoc>*DEPRECATED* Please use `HEAD On Session` instead.</shortdoc>
</kw>
<kw name="OPTIONS" source="/home/aszegedi/projects/robot_demo/.venv/lib/python3.11/site-packages/RequestsLibrary/utils.py" lineno="136">
<arguments repr="*args, **kwargs">
<arg kind="VAR_POSITIONAL" required="false" repr="*args">
<name>args</name>
</arg>
<arg kind="VAR_NAMED" required="false" repr="**kwargs">
<name>kwargs</name>
</arg>
</arguments>
<doc>&lt;p&gt;Sends a OPTIONS request.&lt;/p&gt;
&lt;p&gt;The endpoint used to retrieve the resource is the &lt;code&gt;url&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;By default this keyword fails if a status code with error values is returned in the response, this behavior can be modified using the &lt;code&gt;expected_status&lt;/code&gt; and &lt;code&gt;msg&lt;/code&gt; parameters, read more about it in &lt;a href="#Status%20Should%20Be" class="name"&gt;Status Should Be&lt;/a&gt; keyword documentation. In order to disable this implicit assert mechanism you can pass as &lt;code&gt;expected_status&lt;/code&gt; the values &lt;code&gt;any&lt;/code&gt; or &lt;code&gt;anything&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Other optional requests arguments can be passed using &lt;code&gt;**kwargs&lt;/code&gt; see the &lt;a href="#GET" class="name"&gt;GET&lt;/a&gt; keyword for the complete list.&lt;/p&gt;</doc>
<shortdoc>Sends a OPTIONS request.</shortdoc>
</kw>
<kw name="OPTIONS On Session" source="/home/aszegedi/projects/robot_demo/.venv/lib/python3.11/site-packages/RequestsLibrary/utils.py" lineno="149">
<arguments repr="*args, **kwargs">
<arg kind="VAR_POSITIONAL" required="false" repr="*args">
<name>args</name>
</arg>
<arg kind="VAR_NAMED" required="false" repr="**kwargs">
<name>kwargs</name>
</arg>
</arguments>
<doc>&lt;p&gt;Sends a OPTIONS request on a previously created HTTP Session.&lt;/p&gt;
&lt;p&gt;Session will be identified using the &lt;code&gt;alias&lt;/code&gt; name. The endpoint used to retrieve the resource is the &lt;code&gt;url&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;By default this keyword fails if a status code with error values is returned in the response, this behavior can be modified using the &lt;code&gt;expected_status&lt;/code&gt; and &lt;code&gt;msg&lt;/code&gt; parameters, read more about it in &lt;a href="#Status%20Should%20Be" class="name"&gt;Status Should Be&lt;/a&gt; keyword documentation. In order to disable this implicit assert mechanism you can pass as &lt;code&gt;expected_status&lt;/code&gt; the values &lt;code&gt;any&lt;/code&gt; or &lt;code&gt;anything&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Other optional requests arguments can be passed using &lt;code&gt;**kwargs&lt;/code&gt; see the &lt;a href="#GET" class="name"&gt;GET&lt;/a&gt; keyword for the complete list.&lt;/p&gt;</doc>
<shortdoc>Sends a OPTIONS request on a previously created HTTP Session.</shortdoc>
</kw>
<kw name="Options Request" deprecated="true" source="/home/aszegedi/projects/robot_demo/.venv/lib/python3.11/site-packages/RequestsLibrary/DeprecatedKeywords.py" lineno="344">
<arguments repr="alias, uri, headers=None, allow_redirects=None, timeout=None">
<arg kind="POSITIONAL_OR_NAMED" required="true" repr="alias">
<name>alias</name>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="true" repr="uri">
<name>uri</name>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="headers=None">
<name>headers</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="allow_redirects=None">
<name>allow_redirects</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="timeout=None">
<name>timeout</name>
<default>None</default>
</arg>
</arguments>
<doc>&lt;p&gt;&lt;b&gt;DEPRECATED&lt;/b&gt; Please use &lt;a href="#OPTIONS%20On%20Session" class="name"&gt;OPTIONS On Session&lt;/a&gt; instead.&lt;/p&gt;
&lt;p&gt;Send an OPTIONS request on the session object found using the given &lt;span class="name"&gt;alias&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;alias&lt;/code&gt; that will be used to identify the Session object in the cache&lt;/p&gt;
&lt;p&gt;&lt;code&gt;uri&lt;/code&gt; to send the OPTIONS request to&lt;/p&gt;
&lt;p&gt;&lt;code&gt;allow_redirects&lt;/code&gt; Boolean. Set to True if POST/PUT/DELETE redirect following is allowed.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;headers&lt;/code&gt; a dictionary of headers to use with the request&lt;/p&gt;
&lt;p&gt;&lt;code&gt;timeout&lt;/code&gt; connection timeout&lt;/p&gt;</doc>
<shortdoc>*DEPRECATED* Please use `OPTIONS On Session` instead.</shortdoc>
</kw>
<kw name="PATCH" source="/home/aszegedi/projects/robot_demo/.venv/lib/python3.11/site-packages/RequestsLibrary/utils.py" lineno="136">
<arguments repr="*args, **kwargs">
<arg kind="VAR_POSITIONAL" required="false" repr="*args">
<name>args</name>
</arg>
<arg kind="VAR_NAMED" required="false" repr="**kwargs">
<name>kwargs</name>
</arg>
</arguments>
<doc>&lt;p&gt;Sends a PUT request.&lt;/p&gt;
&lt;p&gt;The endpoint used to send the request is the &lt;code&gt;url&lt;/code&gt; parameter, while its body can be passed using &lt;code&gt;data&lt;/code&gt; or &lt;code&gt;json&lt;/code&gt; parameters.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;data&lt;/code&gt; can be a dictionary, list of tuples, bytes, or file-like object. If you want to pass a json body pass a dictionary as &lt;code&gt;json&lt;/code&gt; parameter.&lt;/p&gt;
&lt;p&gt;By default this keyword fails if a status code with error values is returned in the response, this behavior can be modified using the &lt;code&gt;expected_status&lt;/code&gt; and &lt;code&gt;msg&lt;/code&gt; parameters, read more about it in &lt;a href="#Status%20Should%20Be" class="name"&gt;Status Should Be&lt;/a&gt; keyword documentation. In order to disable this implicit assert mechanism you can pass as &lt;code&gt;expected_status&lt;/code&gt; the values &lt;code&gt;any&lt;/code&gt; or &lt;code&gt;anything&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Other optional requests arguments can be passed using &lt;code&gt;**kwargs&lt;/code&gt; see the &lt;a href="#GET" class="name"&gt;GET&lt;/a&gt; keyword for the complete list.&lt;/p&gt;</doc>
<shortdoc>Sends a PUT request.</shortdoc>
</kw>
<kw name="PATCH On Session" source="/home/aszegedi/projects/robot_demo/.venv/lib/python3.11/site-packages/RequestsLibrary/utils.py" lineno="149">
<arguments repr="*args, **kwargs">
<arg kind="VAR_POSITIONAL" required="false" repr="*args">
<name>args</name>
</arg>
<arg kind="VAR_NAMED" required="false" repr="**kwargs">
<name>kwargs</name>
</arg>
</arguments>
<doc>&lt;p&gt;Sends a PATCH request on a previously created HTTP Session.&lt;/p&gt;
&lt;p&gt;Session will be identified using the &lt;code&gt;alias&lt;/code&gt; name. The endpoint used to send the request is the &lt;code&gt;url&lt;/code&gt; parameter, while its body can be passed using &lt;code&gt;data&lt;/code&gt; or &lt;code&gt;json&lt;/code&gt; parameters.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;data&lt;/code&gt; can be a dictionary, list of tuples, bytes, or file-like object. If you want to pass a json body pass a dictionary as &lt;code&gt;json&lt;/code&gt; parameter.&lt;/p&gt;
&lt;p&gt;By default this keyword fails if a status code with error values is returned in the response, this behavior can be modified using the &lt;code&gt;expected_status&lt;/code&gt; and &lt;code&gt;msg&lt;/code&gt; parameters, read more about it in &lt;a href="#Status%20Should%20Be" class="name"&gt;Status Should Be&lt;/a&gt; keyword documentation. In order to disable this implicit assert mechanism you can pass as &lt;code&gt;expected_status&lt;/code&gt; the values &lt;code&gt;any&lt;/code&gt; or &lt;code&gt;anything&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Other optional requests arguments can be passed using &lt;code&gt;**kwargs&lt;/code&gt; see the &lt;a href="#GET" class="name"&gt;GET&lt;/a&gt; keyword for the complete list.&lt;/p&gt;</doc>
<shortdoc>Sends a PATCH request on a previously created HTTP Session.</shortdoc>
</kw>
<kw name="Patch Request" deprecated="true" source="/home/aszegedi/projects/robot_demo/.venv/lib/python3.11/site-packages/RequestsLibrary/DeprecatedKeywords.py" lineno="147">
<arguments repr="alias, uri, data=None, json=None, params=None, headers=None, files=None, allow_redirects=None, timeout=None">
<arg kind="POSITIONAL_OR_NAMED" required="true" repr="alias">
<name>alias</name>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="true" repr="uri">
<name>uri</name>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="data=None">
<name>data</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="json=None">
<name>json</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="params=None">
<name>params</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="headers=None">
<name>headers</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="files=None">
<name>files</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="allow_redirects=None">
<name>allow_redirects</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="timeout=None">
<name>timeout</name>
<default>None</default>
</arg>
</arguments>
<doc>&lt;p&gt;&lt;b&gt;DEPRECATED&lt;/b&gt; Please use &lt;a href="#PATCH%20On%20Session" class="name"&gt;PATCH On Session&lt;/a&gt; instead.&lt;/p&gt;
&lt;p&gt;Send a PATCH request on the session object found using the given &lt;span class="name"&gt;alias&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;alias&lt;/code&gt; that will be used to identify the Session object in the cache&lt;/p&gt;
&lt;p&gt;&lt;code&gt;uri&lt;/code&gt; to send the PATCH request to&lt;/p&gt;
&lt;p&gt;&lt;code&gt;data&lt;/code&gt; a dictionary of key-value pairs that will be urlencoded and sent as PATCH data or binary data that is sent as the raw body content or file descriptor retrieved by Get File For Streaming Upload&lt;/p&gt;
&lt;p&gt;&lt;code&gt;json&lt;/code&gt; a value that will be json encoded and sent as PATCH data if data is not specified&lt;/p&gt;
&lt;p&gt;&lt;code&gt;headers&lt;/code&gt; a dictionary of headers to use with the request&lt;/p&gt;
&lt;p&gt;&lt;code&gt;files&lt;/code&gt; a dictionary of file names containing file data to PATCH to the server&lt;/p&gt;
&lt;p&gt;&lt;code&gt;allow_redirects&lt;/code&gt; Boolean. Set to True if POST/PUT/DELETE redirect following is allowed.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;params&lt;/code&gt; url parameters to append to the uri&lt;/p&gt;
&lt;p&gt;&lt;code&gt;timeout&lt;/code&gt; connection timeout&lt;/p&gt;</doc>
<shortdoc>*DEPRECATED* Please use `PATCH On Session` instead.</shortdoc>
</kw>
<kw name="POST" source="/home/aszegedi/projects/robot_demo/.venv/lib/python3.11/site-packages/RequestsLibrary/utils.py" lineno="136">
<arguments repr="*args, **kwargs">
<arg kind="VAR_POSITIONAL" required="false" repr="*args">
<name>args</name>
</arg>
<arg kind="VAR_NAMED" required="false" repr="**kwargs">
<name>kwargs</name>
</arg>
</arguments>
<doc>&lt;p&gt;Sends a POST request.&lt;/p&gt;
&lt;p&gt;The endpoint used to send the request is the &lt;code&gt;url&lt;/code&gt; parameter, while its body can be passed using &lt;code&gt;data&lt;/code&gt; or &lt;code&gt;json&lt;/code&gt; parameters.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;data&lt;/code&gt; can be a dictionary, list of tuples, bytes, or file-like object. If you want to pass a json body pass a dictionary as &lt;code&gt;json&lt;/code&gt; parameter.&lt;/p&gt;
&lt;p&gt;By default this keyword fails if a status code with error values is returned in the response, this behavior can be modified using the &lt;code&gt;expected_status&lt;/code&gt; and &lt;code&gt;msg&lt;/code&gt; parameters, read more about it in &lt;a href="#Status%20Should%20Be" class="name"&gt;Status Should Be&lt;/a&gt; keyword documentation. In order to disable this implicit assert mechanism you can pass as &lt;code&gt;expected_status&lt;/code&gt; the values &lt;code&gt;any&lt;/code&gt; or &lt;code&gt;anything&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Other optional requests arguments can be passed using &lt;code&gt;**kwargs&lt;/code&gt; see the &lt;a href="#GET" class="name"&gt;GET&lt;/a&gt; keyword for the complete list.&lt;/p&gt;</doc>
<shortdoc>Sends a POST request.</shortdoc>
</kw>
<kw name="POST On Session" source="/home/aszegedi/projects/robot_demo/.venv/lib/python3.11/site-packages/RequestsLibrary/utils.py" lineno="149">
<arguments repr="*args, **kwargs">
<arg kind="VAR_POSITIONAL" required="false" repr="*args">
<name>args</name>
</arg>
<arg kind="VAR_NAMED" required="false" repr="**kwargs">
<name>kwargs</name>
</arg>
</arguments>
<doc>&lt;p&gt;Sends a POST request on a previously created HTTP Session.&lt;/p&gt;
&lt;p&gt;Session will be identified using the &lt;code&gt;alias&lt;/code&gt; name. The endpoint used to send the request is the &lt;code&gt;url&lt;/code&gt; parameter, while its body can be passed using &lt;code&gt;data&lt;/code&gt; or &lt;code&gt;json&lt;/code&gt; parameters.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;data&lt;/code&gt; can be a dictionary, list of tuples, bytes, or file-like object. If you want to pass a json body pass a dictionary as &lt;code&gt;json&lt;/code&gt; parameter.&lt;/p&gt;
&lt;p&gt;By default this keyword fails if a status code with error values is returned in the response, this behavior can be modified using the &lt;code&gt;expected_status&lt;/code&gt; and &lt;code&gt;msg&lt;/code&gt; parameters, read more about it in &lt;a href="#Status%20Should%20Be" class="name"&gt;Status Should Be&lt;/a&gt; keyword documentation. In order to disable this implicit assert mechanism you can pass as &lt;code&gt;expected_status&lt;/code&gt; the values &lt;code&gt;any&lt;/code&gt; or &lt;code&gt;anything&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Other optional requests arguments can be passed using &lt;code&gt;**kwargs&lt;/code&gt; see the &lt;a href="#GET" class="name"&gt;GET&lt;/a&gt; keyword for the complete list.&lt;/p&gt;</doc>
<shortdoc>Sends a POST request on a previously created HTTP Session.</shortdoc>
</kw>
<kw name="Post Request" deprecated="true" source="/home/aszegedi/projects/robot_demo/.venv/lib/python3.11/site-packages/RequestsLibrary/DeprecatedKeywords.py" lineno="88">
<arguments repr="alias, uri, data=None, json=None, params=None, headers=None, files=None, allow_redirects=None, timeout=None">
<arg kind="POSITIONAL_OR_NAMED" required="true" repr="alias">
<name>alias</name>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="true" repr="uri">
<name>uri</name>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="data=None">
<name>data</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="json=None">
<name>json</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="params=None">
<name>params</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="headers=None">
<name>headers</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="files=None">
<name>files</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="allow_redirects=None">
<name>allow_redirects</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="timeout=None">
<name>timeout</name>
<default>None</default>
</arg>
</arguments>
<doc>&lt;p&gt;&lt;b&gt;DEPRECATED&lt;/b&gt; Please use &lt;a href="#POST%20On%20Session" class="name"&gt;POST On Session&lt;/a&gt; instead.&lt;/p&gt;
&lt;p&gt;Send a POST request on the session object found using the given &lt;span class="name"&gt;alias&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;alias&lt;/code&gt; that will be used to identify the Session object in the cache&lt;/p&gt;
&lt;p&gt;&lt;code&gt;uri&lt;/code&gt; to send the POST request to&lt;/p&gt;
&lt;p&gt;&lt;code&gt;data&lt;/code&gt; a dictionary of key-value pairs that will be urlencoded and sent as POST data or binary data that is sent as the raw body content or passed as such for multipart form data if &lt;code&gt;files&lt;/code&gt; is also defined or file descriptor retrieved by Get File For Streaming Upload&lt;/p&gt;
&lt;p&gt;&lt;code&gt;json&lt;/code&gt; a value that will be json encoded and sent as POST data if files or data is not specified&lt;/p&gt;
&lt;p&gt;&lt;code&gt;params&lt;/code&gt; url parameters to append to the uri&lt;/p&gt;
&lt;p&gt;&lt;code&gt;headers&lt;/code&gt; a dictionary of headers to use with the request&lt;/p&gt;
&lt;p&gt;&lt;code&gt;files&lt;/code&gt; a dictionary of file names containing file data to POST to the server&lt;/p&gt;
&lt;p&gt;&lt;code&gt;allow_redirects&lt;/code&gt; Boolean. Set to True if POST/PUT/DELETE redirect following is allowed.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;timeout&lt;/code&gt; connection timeout&lt;/p&gt;</doc>
<shortdoc>*DEPRECATED* Please use `POST On Session` instead.</shortdoc>
</kw>
<kw name="PUT" source="/home/aszegedi/projects/robot_demo/.venv/lib/python3.11/site-packages/RequestsLibrary/utils.py" lineno="136">
<arguments repr="*args, **kwargs">
<arg kind="VAR_POSITIONAL" required="false" repr="*args">
<name>args</name>
</arg>
<arg kind="VAR_NAMED" required="false" repr="**kwargs">
<name>kwargs</name>
</arg>
</arguments>
<doc>&lt;p&gt;Sends a PUT request.&lt;/p&gt;
&lt;p&gt;The endpoint used to send the request is the &lt;code&gt;url&lt;/code&gt; parameter, while its body can be passed using &lt;code&gt;data&lt;/code&gt; or &lt;code&gt;json&lt;/code&gt; parameters.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;data&lt;/code&gt; can be a dictionary, list of tuples, bytes, or file-like object. If you want to pass a json body pass a dictionary as &lt;code&gt;json&lt;/code&gt; parameter.&lt;/p&gt;
&lt;p&gt;By default this keyword fails if a status code with error values is returned in the response, this behavior can be modified using the &lt;code&gt;expected_status&lt;/code&gt; and &lt;code&gt;msg&lt;/code&gt; parameters, read more about it in &lt;a href="#Status%20Should%20Be" class="name"&gt;Status Should Be&lt;/a&gt; keyword documentation. In order to disable this implicit assert mechanism you can pass as &lt;code&gt;expected_status&lt;/code&gt; the values &lt;code&gt;any&lt;/code&gt; or &lt;code&gt;anything&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Other optional requests arguments can be passed using &lt;code&gt;**kwargs&lt;/code&gt; see the &lt;a href="#GET" class="name"&gt;GET&lt;/a&gt; keyword for the complete list.&lt;/p&gt;</doc>
<shortdoc>Sends a PUT request.</shortdoc>
</kw>
<kw name="PUT On Session" source="/home/aszegedi/projects/robot_demo/.venv/lib/python3.11/site-packages/RequestsLibrary/utils.py" lineno="149">
<arguments repr="*args, **kwargs">
<arg kind="VAR_POSITIONAL" required="false" repr="*args">
<name>args</name>
</arg>
<arg kind="VAR_NAMED" required="false" repr="**kwargs">
<name>kwargs</name>
</arg>
</arguments>
<doc>&lt;p&gt;Sends a PUT request on a previously created HTTP Session.&lt;/p&gt;
&lt;p&gt;Session will be identified using the &lt;code&gt;alias&lt;/code&gt; name. The endpoint used to send the request is the &lt;code&gt;url&lt;/code&gt; parameter, while its body can be passed using &lt;code&gt;data&lt;/code&gt; or &lt;code&gt;json&lt;/code&gt; parameters.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;data&lt;/code&gt; can be a dictionary, list of tuples, bytes, or file-like object. If you want to pass a json body pass a dictionary as &lt;code&gt;json&lt;/code&gt; parameter.&lt;/p&gt;
&lt;p&gt;By default this keyword fails if a status code with error values is returned in the response, this behavior can be modified using the &lt;code&gt;expected_status&lt;/code&gt; and &lt;code&gt;msg&lt;/code&gt; parameters, read more about it in &lt;a href="#Status%20Should%20Be" class="name"&gt;Status Should Be&lt;/a&gt; keyword documentation. In order to disable this implicit assert mechanism you can pass as &lt;code&gt;expected_status&lt;/code&gt; the values &lt;code&gt;any&lt;/code&gt; or &lt;code&gt;anything&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Other optional requests arguments can be passed using &lt;code&gt;**kwargs&lt;/code&gt; see the &lt;a href="#GET" class="name"&gt;GET&lt;/a&gt; keyword for the complete list.&lt;/p&gt;</doc>
<shortdoc>Sends a PUT request on a previously created HTTP Session.</shortdoc>
</kw>
<kw name="Put Request" deprecated="true" source="/home/aszegedi/projects/robot_demo/.venv/lib/python3.11/site-packages/RequestsLibrary/DeprecatedKeywords.py" lineno="205">
<arguments repr="alias, uri, data=None, json=None, params=None, files=None, headers=None, allow_redirects=None, timeout=None">
<arg kind="POSITIONAL_OR_NAMED" required="true" repr="alias">
<name>alias</name>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="true" repr="uri">
<name>uri</name>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="data=None">
<name>data</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="json=None">
<name>json</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="params=None">
<name>params</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="files=None">
<name>files</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="headers=None">
<name>headers</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="allow_redirects=None">
<name>allow_redirects</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="timeout=None">
<name>timeout</name>
<default>None</default>
</arg>
</arguments>
<doc>&lt;p&gt;&lt;b&gt;DEPRECATED&lt;/b&gt; Please use &lt;a href="#PUT%20On%20Session" class="name"&gt;PUT On Session&lt;/a&gt; instead.&lt;/p&gt;
&lt;p&gt;Send a PUT request on the session object found using the given &lt;span class="name"&gt;alias&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;alias&lt;/code&gt; that will be used to identify the Session object in the cache&lt;/p&gt;
&lt;p&gt;&lt;code&gt;uri&lt;/code&gt; to send the PUT request to&lt;/p&gt;
&lt;p&gt;&lt;code&gt;data&lt;/code&gt; a dictionary of key-value pairs that will be urlencoded and sent as PUT data or binary data that is sent as the raw body content or file descriptor retrieved by Get File For Streaming Upload&lt;/p&gt;
&lt;p&gt;&lt;code&gt;json&lt;/code&gt; a value that will be json encoded and sent as PUT data if data is not specified&lt;/p&gt;
&lt;p&gt;&lt;code&gt;headers&lt;/code&gt; a dictionary of headers to use with the request&lt;/p&gt;
&lt;p&gt;&lt;code&gt;allow_redirects&lt;/code&gt; Boolean. Set to True if POST/PUT/DELETE redirect following is allowed.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;params&lt;/code&gt; url parameters to append to the uri&lt;/p&gt;
&lt;p&gt;&lt;code&gt;timeout&lt;/code&gt; connection timeout&lt;/p&gt;</doc>
<shortdoc>*DEPRECATED* Please use `PUT On Session` instead.</shortdoc>
</kw>
<kw name="Request Should Be Successful" source="/home/aszegedi/projects/robot_demo/.venv/lib/python3.11/site-packages/RequestsLibrary/RequestsKeywords.py" lineno="124">
<arguments repr="response=None">
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="response=None">
<name>response</name>
<default>None</default>
</arg>
</arguments>
<doc>&lt;p&gt;Fails if response status code is a client or server error (4xx, 5xx).&lt;/p&gt;
&lt;p&gt;&lt;code&gt;response&lt;/code&gt; is the output of other requests keywords like &lt;a href="#GET%20On%20Session" class="name"&gt;GET On Session&lt;/a&gt;. If omitted the last response will be used.&lt;/p&gt;
&lt;p&gt;In case of failure an HTTPError will be automatically raised.&lt;/p&gt;
&lt;p&gt;For a more versatile assert keyword see &lt;a href="#Status%20Should%20Be" class="name"&gt;Status Should Be&lt;/a&gt;.&lt;/p&gt;</doc>
<shortdoc>Fails if response status code is a client or server error (4xx, 5xx).</shortdoc>
</kw>
<kw name="Session Exists" source="/home/aszegedi/projects/robot_demo/.venv/lib/python3.11/site-packages/RequestsLibrary/SessionKeywords.py" lineno="532">
<arguments repr="alias">
<arg kind="POSITIONAL_OR_NAMED" required="true" repr="alias">
<name>alias</name>
</arg>
</arguments>
<doc>&lt;p&gt;Return True if the session has been already created&lt;/p&gt;
&lt;p&gt;&lt;code&gt;alias&lt;/code&gt; that has been used to identify the Session object in the cache&lt;/p&gt;</doc>
<shortdoc>Return True if the session has been already created</shortdoc>
</kw>
<kw name="Status Should Be" source="/home/aszegedi/projects/robot_demo/.venv/lib/python3.11/site-packages/RequestsLibrary/RequestsKeywords.py" lineno="76">
<arguments repr="expected_status, response=None, msg=None">
<arg kind="POSITIONAL_OR_NAMED" required="true" repr="expected_status">
<name>expected_status</name>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="response=None">
<name>response</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="msg=None">
<name>msg</name>
<default>None</default>
</arg>
</arguments>
<doc>&lt;p&gt;Fails if response status code is different than the expected.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;expected_status&lt;/code&gt; could be the code number as an integer or as string. But it could also be a named status code like 'ok', 'created', 'accepted' or 'bad request', 'not found' etc.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;response&lt;/code&gt; is the output of other requests keywords like &lt;a href="#GET" class="name"&gt;GET&lt;/a&gt; or &lt;a href="#GET%20On%20Session" class="name"&gt;GET On Session&lt;/a&gt;. If omitted the last response will be used.&lt;/p&gt;
&lt;p&gt;In case of failure an HTTPError will be automatically raised. A custom failure message &lt;code&gt;msg&lt;/code&gt; can be added like in built-in keywords.&lt;/p&gt;
&lt;p&gt;New requests keywords like &lt;a href="#GET" class="name"&gt;GET&lt;/a&gt; or &lt;a href="#GET%20On%20Session" class="name"&gt;GET On Session&lt;/a&gt; (starting from 0.8 version) already have an implicit assert mechanism that, by default, verifies the response status code. &lt;a href="#Status%20Should%20Be" class="name"&gt;Status Should Be&lt;/a&gt; keyword can be useful when you disable implicit assert using &lt;code&gt;expected_status=anything&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For example when you have a nested keyword that is used for both OK and ERROR responses:&lt;/p&gt;
&lt;pre&gt;
  &lt;b&gt;*&lt;/b&gt; Test Cases &lt;b&gt;*&lt;/b&gt;

  Test Get Request And Make Sure Is A 404 Response
      ${resp}=            GET Custom Keyword That Returns OK or ERROR Response  case=notfound
      Status Should Be    404    ${resp}
      Should Be Equal As Strings  NOT FOUND  ${resp.reason}

  Test Get Request And Make Sure Is OK
      ${resp}=            GET Custom Keyword That Returns OK or ERROR Response  case=pass
      Status Should Be    200    ${resp}
      Should Be Equal As Strings  OK  ${resp.reason}

  &lt;b&gt;*&lt;/b&gt; Keywords &lt;b&gt;*&lt;/b&gt;

  GET Custom Keyword That Returns OK or ERROR Response
  [Arguments]  $case
       [...]
      IF $case == notfound
          $resp=     GET [...] expected_status=Anything
          [Return]   $resp
      ELSE
       [...]
&lt;/pre&gt;</doc>
<shortdoc>Fails if response status code is different than the expected.</shortdoc>
</kw>
<kw name="To Json" deprecated="true" source="/home/aszegedi/projects/robot_demo/.venv/lib/python3.11/site-packages/RequestsLibrary/DeprecatedKeywords.py" lineno="15">
<arguments repr="content, pretty_print=False">
<arg kind="POSITIONAL_OR_NAMED" required="true" repr="content">
<name>content</name>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="pretty_print=False">
<name>pretty_print</name>
<default>False</default>
</arg>
</arguments>
<doc>&lt;p&gt;&lt;b&gt;DEPRECATED&lt;/b&gt; Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.&lt;/p&gt;
&lt;p&gt;Convert a string to a JSON object&lt;/p&gt;
&lt;p&gt;&lt;code&gt;content&lt;/code&gt; String content to convert into JSON&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pretty_print&lt;/code&gt; If defined, will output JSON is pretty print format&lt;/p&gt;</doc>
<shortdoc>*DEPRECATED* Please use ${resp.json()} instead. Have a look at the improved HTML output as pretty printing replacement.</shortdoc>
</kw>
<kw name="Update Session" source="/home/aszegedi/projects/robot_demo/.venv/lib/python3.11/site-packages/RequestsLibrary/SessionKeywords.py" lineno="552">
<arguments repr="alias, headers=None, cookies=None">
<arg kind="POSITIONAL_OR_NAMED" required="true" repr="alias">
<name>alias</name>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="headers=None">
<name>headers</name>
<default>None</default>
</arg>
<arg kind="POSITIONAL_OR_NAMED" required="false" repr="cookies=None">
<name>cookies</name>
<default>None</default>
</arg>
</arguments>
<doc>&lt;p&gt;Updates HTTP Session Headers and Cookies.&lt;/p&gt;
&lt;p&gt;Session will be identified using the &lt;code&gt;alias&lt;/code&gt; name. Dictionary of &lt;code&gt;headers&lt;/code&gt; and &lt;code&gt;cookies&lt;/code&gt; to be updated and merged into session data.&lt;/p&gt;</doc>
<shortdoc>Updates HTTP Session Headers and Cookies.</shortdoc>
</kw>
</keywords>
<datatypes>
</datatypes>
<typedocs>
</typedocs>
</keywordspec>
